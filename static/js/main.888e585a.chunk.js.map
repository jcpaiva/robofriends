{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","robots.js","containers/App.js","serviceWorker.js","index.js"],"names":["Card","id","name","username","email","className","src","alt","CardList","robots","map","user","i","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchField","target","value","filteredRobots","filter","robot","toLowerCase","includes","length","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.888e585a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../containers/Card.css\";\r\n\r\nconst Card = ({ id, name, username, email }) => {\r\n  return (\r\n    <div className=\"tc grad dib br3 ma2 grow bw2 shadow-5 shadow-hover\">\r\n      <img\r\n        src={`https://robohash.org/${username + id}?150x150`}\r\n        alt=\"Robo Img\"\r\n      />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div>\r\n      {robots.map((user, i) => {\r\n        return (\r\n          <Card\r\n            key={i}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email}\r\n            username={robots[i].username}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"Buscar Robots\"\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', border: '2px solid black' }}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import { render } from \"@testing-library/react\";\r\nimport React, { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Ooooops. This isn't working.</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export const robots = [\r\n  {\r\n    id: 1,\r\n    name: \"Santiago Montilla\",\r\n    username: \"SantiM\",\r\n    email: \"s.montilla@gmail.com\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Sarah Paiva\",\r\n    username: \"SarahA\",\r\n    email: \"s.paiva@gmail.com\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Clara Montilla\",\r\n    username: \"ClaraM\",\r\n    email: \"c.montilla@gmail.com\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Carlos Paiva\",\r\n    username: \"CarlosP\",\r\n    email: \"c.paiva@gmail.com\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Eddy Alcalá\",\r\n    username: \"EddyA\",\r\n    email: \"e.alcala@gmail.com\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Andrés Mendoza\",\r\n    username: \"AndresM\",\r\n    email: \"a.mendoza@gmail.com\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Anderson Villalobos\",\r\n    username: \"AndersonV\",\r\n    email: \"a.villalobos@gmail.com\",\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Juan Paiva\",\r\n    username: \"JuanP\",\r\n    email: \"j.paiva@gmail.com\",\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"Carmen Alcalá\",\r\n    username: \"CarmenA\",\r\n    email: \"c.alcala@gmail.com\",\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Emisbeth Villalobos\",\r\n    username: \"EmisbethV\",\r\n    email: \"e.villalobos@gmail.com\",\r\n  },\r\n  {\r\n    id: 11,\r\n    name: \"José Villalobos\",\r\n    username: \"JoseV\",\r\n    email: \"j.villalobos@gmail.com\",\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"Imar López\",\r\n    username: \"ImarL\",\r\n    email: \"i.lopez@gmail.com\",\r\n  },\r\n];\r\n","import React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundary from \"../components/ErrorBoundary\"\r\nimport { robots } from \"../robots\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchField: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ robots: robots });\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchField: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { robots, searchField } = this.state;\r\n    const filteredRobots = robots.filter((robot) => {\r\n      return robot.name\r\n        .toLowerCase()\r\n        .includes(searchField.toLowerCase());\r\n    });\r\n    return !robots.length ?\r\n      <h1>Loading...</h1> :\r\n      (\r\n        <div className=\"tc\">\r\n          <h1 className=\"f1\">RobotFamily</h1>\r\n          <SearchBox searchChange={this.onSearchChange} />\r\n          <Scroll>\r\n            <ErrorBoundary>\r\n              <CardList robots={filteredRobots} />\r\n            </ErrorBoundary>\r\n          </Scroll>\r\n        </div >\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./containers/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"tachyons\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}